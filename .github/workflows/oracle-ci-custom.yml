name: Oracle Database CI (Custom)

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  ORACLE_VERSION: latest-faststart

jobs:
  test:
    name: Oracle Database Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Start Oracle Database
        run: |
          echo "üê≥ Starting Oracle Database..."
          docker run -d --name oracle-db -p 1521:1521 -e ORACLE_PASSWORD=OraclePassword123 gvenzl/oracle-free:latest-faststart
          
          echo "‚è≥ Waiting for Oracle Database to be ready..."
          for i in {1..60}; do
            if docker exec oracle-db sqlplus -s system/OraclePassword123@localhost:1521/FREEPDB1 <<< "SELECT 1 FROM DUAL;" > /dev/null 2>&1; then
              echo "‚úÖ Oracle Database is ready!"
              break
            fi
            echo "‚è≥ Attempt $i/60 - waiting for Oracle Database..."
            sleep 5
          done
          
      - name: Run Setup Scripts
        run: |
          echo "üìã Running setup scripts..."
          docker cp ci_cd_testing/sql/setup/01_schema_setup.sql oracle-db:/tmp/setup1.sql
          docker cp ci_cd_testing/sql/setup/02_test_data.sql oracle-db:/tmp/setup2.sql
          docker exec oracle-db sqlplus -s system/OraclePassword123@localhost:1521/FREEPDB1 @/tmp/setup1.sql
          docker exec oracle-db sqlplus -s system/OraclePassword123@localhost:1521/FREEPDB1 @/tmp/setup2.sql
          
      - name: Run Test Scripts with SPOOL
        run: |
          echo "üìä Running test scripts with SPOOL output..."
          mkdir -p test-results
          
          # Copy test script to container and run with SPOOL
          docker cp ci_cd_testing/sql/tests/01_basic_queries_with_spool.sql oracle-db:/tmp/test.sql
          
          docker exec oracle-db sqlplus -s system/OraclePassword123@localhost:1521/FREEPDB1 << 'EOF'
          SET PAGESIZE 0
          SET LINESIZE 1000
          SET FEEDBACK OFF
          SET HEADING OFF
          SET ECHO OFF
          
          SPOOL /tmp/test_results_01_basic_queries.txt
          @/tmp/test.sql
          SPOOL OFF
          
          EXIT;
          EOF
          
          # Copy results back to host
          docker cp oracle-db:/tmp/test_results_01_basic_queries.txt test-results/
          
          echo "üìÑ Test results captured:"
          cat test-results/test_results_01_basic_queries.txt
          
      - name: Run Cleanup Scripts
        if: always()
        run: |
          echo "üßπ Running cleanup scripts..."
          docker cp ci_cd_testing/sql/cleanup/01_cleanup_all.sql oracle-db:/tmp/cleanup.sql
          docker exec oracle-db sqlplus -s system/OraclePassword123@localhost:1521/FREEPDB1 @/tmp/cleanup.sql || true
          
      - name: Stop Oracle Database
        if: always()
        run: |
          echo "üõë Stopping Oracle Database..."
          docker stop oracle-db || true
          docker rm oracle-db || true
          
      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: oracle-test-artifacts-${{ env.ORACLE_VERSION }}
          path: |
            test-results/
            ci_cd_testing/sql/
