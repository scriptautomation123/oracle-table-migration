-- ==================================================================
-- CREATE TABLE: APP_DATA_OWNER.SESSION_DATA_NEW
-- ==================================================================
-- Generated: 2025-10-25 16:33:49
-- Migration Action: add_interval_hash_partitioning
-- Source Table: APP_DATA_OWNER.SESSION_DATA-- Current: Non-partitioned table-- Target Partitioning: INTERVAL-HASH-- ==================================================================

SET ECHO ON
SET SERVEROUTPUT ON
SET TIMING ON
SET FEEDBACK ON

PROMPT ================================================================
PROMPT Step 10: Creating New Partitioned Table
PROMPT ================================================================
PROMPT Table: APP_DATA_OWNER.SESSION_DATA_NEW
PROMPT Partitioning: INTERVAL (MONTH)PROMPT Partition Column: CREATED_AT
PROMPT Subpartitioning: HASH on USER_IDPROMPT Hash Subpartitions: 8PROMPT Tablespace: USERS
PROMPT LOB Columns: 2
PROMPT ================================================================

-- Check if table already exists (generic)
@validation/check_table_exists.sql APP_DATA_OWNER SESSION_DATA_NEW

-- Create new table with partitioning
PROMPT

PROMPT Creating table APP_DATA_OWNER.SESSION_DATA_NEW...
PROMPT Estimated time: < 1 minute



CREATE TABLE "APP_DATA_OWNER"."SESSION_DATA_NEW"
(    SESSION_ID VARCHAR2(100) NOT NULL,    USER_ID NUMBER,    CREATED_AT TIMESTAMP(6) DEFAULT SYSTIMESTAMP,    LAST_ACCESS TIMESTAMP(6),    SESSION_BLOB1 BLOB,    SESSION_BLOB2 BLOB)TABLESPACE USERSPCTFREE 10
INITRANS 1
MAXTRANS 255
STORAGE (
    INITIAL 65536
    NEXT 1048576
    BUFFER_POOL DEFAULT
)-- Partition the main table data by date, and subpartition by hash
PARTITION BY RANGE (CREATED_AT)
INTERVAL (INTERVAL '1' MONTH) -- Create a new partition for each monthSUBPARTITION BY HASH (USER_ID) SUBPARTITIONS 8 -- Create 8 hash subpartitions per interval partition(
    -- Define the initial, pre-interval partition
    PARTITION p_before_2024_01_01 VALUES LESS THAN (TO_DATE('2024-01-01', 'YYYY-MM-DD'))    (        SUBPARTITION p_before_2024_01_01_s1 TABLESPACE USERS            LOB (SESSION_BLOB1) STORE AS SECUREFILE (TABLESPACE GD_LOB_01),            LOB (SESSION_BLOB2) STORE AS SECUREFILE (TABLESPACE GD_LOB_01),        SUBPARTITION p_before_2024_01_01_s2 TABLESPACE USERS            LOB (SESSION_BLOB1) STORE AS SECUREFILE (TABLESPACE GD_LOB_02),            LOB (SESSION_BLOB2) STORE AS SECUREFILE (TABLESPACE GD_LOB_02),        SUBPARTITION p_before_2024_01_01_s3 TABLESPACE USERS            LOB (SESSION_BLOB1) STORE AS SECUREFILE (TABLESPACE GD_LOB_03),            LOB (SESSION_BLOB2) STORE AS SECUREFILE (TABLESPACE GD_LOB_03),        SUBPARTITION p_before_2024_01_01_s4 TABLESPACE USERS            LOB (SESSION_BLOB1) STORE AS SECUREFILE (TABLESPACE GD_LOB_04),            LOB (SESSION_BLOB2) STORE AS SECUREFILE (TABLESPACE GD_LOB_04),        SUBPARTITION p_before_2024_01_01_s5 TABLESPACE USERS            LOB (SESSION_BLOB1) STORE AS SECUREFILE (TABLESPACE GD_LOB_01),            LOB (SESSION_BLOB2) STORE AS SECUREFILE (TABLESPACE GD_LOB_01),        SUBPARTITION p_before_2024_01_01_s6 TABLESPACE USERS            LOB (SESSION_BLOB1) STORE AS SECUREFILE (TABLESPACE GD_LOB_02),            LOB (SESSION_BLOB2) STORE AS SECUREFILE (TABLESPACE GD_LOB_02),        SUBPARTITION p_before_2024_01_01_s7 TABLESPACE USERS            LOB (SESSION_BLOB1) STORE AS SECUREFILE (TABLESPACE GD_LOB_03),            LOB (SESSION_BLOB2) STORE AS SECUREFILE (TABLESPACE GD_LOB_03),        SUBPARTITION p_before_2024_01_01_s8 TABLESPACE USERS            LOB (SESSION_BLOB1) STORE AS SECUREFILE (TABLESPACE GD_LOB_04),            LOB (SESSION_BLOB2) STORE AS SECUREFILE (TABLESPACE GD_LOB_04)    ))-- Subpartition template for all future interval partitions
SUBPARTITION TEMPLATE (    SUBPARTITION s1 TABLESPACE USERS        LOB (SESSION_BLOB1) STORE AS SECUREFILE (TABLESPACE GD_LOB_01),        LOB (SESSION_BLOB2) STORE AS SECUREFILE (TABLESPACE GD_LOB_01),    SUBPARTITION s2 TABLESPACE USERS        LOB (SESSION_BLOB1) STORE AS SECUREFILE (TABLESPACE GD_LOB_02),        LOB (SESSION_BLOB2) STORE AS SECUREFILE (TABLESPACE GD_LOB_02),    SUBPARTITION s3 TABLESPACE USERS        LOB (SESSION_BLOB1) STORE AS SECUREFILE (TABLESPACE GD_LOB_03),        LOB (SESSION_BLOB2) STORE AS SECUREFILE (TABLESPACE GD_LOB_03),    SUBPARTITION s4 TABLESPACE USERS        LOB (SESSION_BLOB1) STORE AS SECUREFILE (TABLESPACE GD_LOB_04),        LOB (SESSION_BLOB2) STORE AS SECUREFILE (TABLESPACE GD_LOB_04),    SUBPARTITION s5 TABLESPACE USERS        LOB (SESSION_BLOB1) STORE AS SECUREFILE (TABLESPACE GD_LOB_01),        LOB (SESSION_BLOB2) STORE AS SECUREFILE (TABLESPACE GD_LOB_01),    SUBPARTITION s6 TABLESPACE USERS        LOB (SESSION_BLOB1) STORE AS SECUREFILE (TABLESPACE GD_LOB_02),        LOB (SESSION_BLOB2) STORE AS SECUREFILE (TABLESPACE GD_LOB_02),    SUBPARTITION s7 TABLESPACE USERS        LOB (SESSION_BLOB1) STORE AS SECUREFILE (TABLESPACE GD_LOB_03),        LOB (SESSION_BLOB2) STORE AS SECUREFILE (TABLESPACE GD_LOB_03),    SUBPARTITION s8 TABLESPACE USERS        LOB (SESSION_BLOB1) STORE AS SECUREFILE (TABLESPACE GD_LOB_04),        LOB (SESSION_BLOB2) STORE AS SECUREFILE (TABLESPACE GD_LOB_04))ENABLE ROW MOVEMENT;

PROMPT âœ“ Table APP_DATA_OWNER.SESSION_DATA_NEW created successfully


-- Post-create table checks (structure, partitioning, LOBs, stats)
@validation/post_create_table_checks.sql APP_DATA_OWNER SESSION_DATA_NEW 4

PROMPT
PROMPT ================================================================
PROMPT Step 10 Complete: Table Structure Created
PROMPT ================================================================
PROMPT Status: SUCCESS
PROMPT Table: APP_DATA_OWNER.SESSION_DATA_NEWPROMPT Partitioning: INTERVAL-HASHPROMPT
PROMPT Next Steps:
PROMPT   1. Review table structure above
PROMPT   2. Run 20_data_load.sql to load data (est. < 1 minute)
PROMPT   3. Monitor space and performance
PROMPT ================================================================